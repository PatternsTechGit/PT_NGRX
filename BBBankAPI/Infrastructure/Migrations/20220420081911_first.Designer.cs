// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BBBankContext))]
    [Migration("20220420081911_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountStatus")
                        .HasColumnType("int");

                    b.Property<string>("AccountTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            AccountNumber = "0001-1001",
                            AccountStatus = 0,
                            AccountTitle = "Raas Masood",
                            CurrentBalance = 3500m,
                            UserId = "aa45e3c9-261d-41fe-a1b0-5b4dcf79cfd3"
                        },
                        new
                        {
                            Id = "2f115781-c0d2-4f98-a70b-0bc4ed01d780",
                            AccountNumber = "0002-2002",
                            AccountStatus = 0,
                            AccountTitle = "Salman Taj",
                            CurrentBalance = 545m,
                            UserId = "c651e237-102a-4de1-8c5a-d41c94079ff0"
                        });
                });

            modelBuilder.Entity("Entities.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = "074b06bb-c104-4cac-85df-50ff7eda194e",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 3000m,
                            TransactionDate = new DateTime(2022, 4, 19, 3, 19, 10, 938, DateTimeKind.Local).AddTicks(6497),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "7f2c62d4-1147-44a3-85c5-60ded176398b",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -500m,
                            TransactionDate = new DateTime(2021, 4, 20, 3, 19, 10, 938, DateTimeKind.Local).AddTicks(6531),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "d56ff06c-79e7-43d9-8eab-147d635e0a2d",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 1000m,
                            TransactionDate = new DateTime(2020, 4, 20, 3, 19, 10, 938, DateTimeKind.Local).AddTicks(6534),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "b1fed266-dc74-40d2-b690-e77d972423b3",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 500m,
                            TransactionDate = new DateTime(2022, 1, 20, 3, 19, 10, 938, DateTimeKind.Local).AddTicks(6538),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "197771df-832c-440f-b856-1e71bc3214e5",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -200m,
                            TransactionDate = new DateTime(2021, 12, 20, 3, 19, 10, 938, DateTimeKind.Local).AddTicks(6541),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "9ce2398f-15ed-4b56-8ca9-25a1f444554e",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 500m,
                            TransactionDate = new DateTime(2021, 11, 20, 3, 19, 10, 938, DateTimeKind.Local).AddTicks(6544),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "ba598206-f14b-4617-a3dc-67fbd1748b30",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 200m,
                            TransactionDate = new DateTime(2021, 10, 20, 3, 19, 10, 938, DateTimeKind.Local).AddTicks(6547),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "ee215332-0992-4cea-88f8-abbe03d0b54e",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -300m,
                            TransactionDate = new DateTime(2021, 9, 20, 3, 19, 10, 938, DateTimeKind.Local).AddTicks(6550),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "6cc88a85-5862-4a82-80e2-da16171c3959",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -100m,
                            TransactionDate = new DateTime(2021, 8, 20, 3, 19, 10, 938, DateTimeKind.Local).AddTicks(6559),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "071e0359-3b44-4373-88c6-b3d7efce7770",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 200m,
                            TransactionDate = new DateTime(2021, 7, 20, 3, 19, 10, 938, DateTimeKind.Local).AddTicks(6562),
                            TransactionType = 0
                        },
                        new
                        {
                            Id = "5ade4fce-03ee-4537-81e8-711922a5b81a",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = -500m,
                            TransactionDate = new DateTime(2021, 6, 20, 3, 19, 10, 938, DateTimeKind.Local).AddTicks(6565),
                            TransactionType = 1
                        },
                        new
                        {
                            Id = "a6e67113-d9a2-4195-a5f5-81d6ebe9be60",
                            AccountId = "37846734-172e-4149-8cec-6f43d1eb3f60",
                            TransactionAmount = 900m,
                            TransactionDate = new DateTime(2021, 5, 20, 3, 19, 10, 938, DateTimeKind.Local).AddTicks(6568),
                            TransactionType = 0
                        });
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "aa45e3c9-261d-41fe-a1b0-5b4dcf79cfd3",
                            Email = "rassmasood@hotmail.com",
                            FirstName = "Raas",
                            LastName = "Masood",
                            ProfilePicUrl = "https://res.cloudinary.com/demo/image/upload/w_400,h_400,c_crop,g_face,r_max/w_200/lady.jpg"
                        },
                        new
                        {
                            Id = "c651e237-102a-4de1-8c5a-d41c94079ff0",
                            Email = "salman-dev@outlook.com",
                            FirstName = "Salman",
                            LastName = "Taj",
                            ProfilePicUrl = "https://res.cloudinary.com/demo/image/upload/w_400,h_400,c_crop,g_face,r_max/w_200/lady.jpg"
                        });
                });

            modelBuilder.Entity("Entities.Account", b =>
                {
                    b.HasOne("Entities.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("Entities.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Entities.Transaction", b =>
                {
                    b.HasOne("Entities.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Entities.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Entities.User", b =>
                {
                    b.Navigation("Account")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
